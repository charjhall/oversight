{"version":3,"sources":["img/logo.png","img/kids_ipad.png","img/message_swipe.png","img/add_engagement.png","img/silos.png","img/oversignal_over_silos.png","serviceWorker.js","Header.js","Investors.js","Advertisers.js","FrontEndUsers.js","Body.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Header","_this","this","react_default","a","createElement","class","src","logo","alt","Button_default","onClick","props","React","Component","Investors","KidsIpad","MessageSwipe","AddEngagement","Silos","OverSignalOverSilos","Advertisers","FrontEndUsers","Body","pageName","Investors_Investors","Advertisers_Advertisers","FrontEndUsers_FrontEndUsers","Index","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","state","newPage","setState","Header_Header","Body_Body","ReactDOM","render","src_Index","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+QCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wGCbeC,mLACV,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,YACTH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMC,IAAI,OAAOH,MAAM,SACjCH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACTH,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAQO,QAAS,kBAAMV,EAAKW,MAAMD,QAAQ,eAA1C,aAGAR,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAQO,QAAS,kBAAMV,EAAKW,MAAMD,QAAQ,iBAA1C,eAGAR,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAQO,QAAS,kBAAMV,EAAKW,MAAMD,QAAQ,qBAA1C,4BAZ0BE,IAAMC,gGCGrBC,0LAEjB,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,gGAIAF,EAAAC,EAAAC,cAAA,6GAIAF,EAAAC,EAAAC,cAAA,OAAKE,IAAKS,IAAUP,IAAI,cACxBN,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,6DACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAAA,0HAIAF,EAAAC,EAAAC,cAAA,wFAIAF,EAAAC,EAAAC,cAAA,iFAGAF,EAAAC,EAAAC,cAAA,wHAIAF,EAAAC,EAAAC,cAAA,4fAUAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,yIAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,+CAEFF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qBACTH,EAAAC,EAAAC,cAAA,oJAKAF,EAAAC,EAAAC,cAAA,OAAKE,IAAKU,IAAcR,IAAI,mBAE9BN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qBACTH,EAAAC,EAAAC,cAAA,wIAIAF,EAAAC,EAAAC,cAAA,OAAKE,IAAKW,IAAeT,IAAI,mBAE/BN,EAAAC,EAAAC,cAAA,+MAKAF,EAAAC,EAAAC,cAAA,6VAQAF,EAAAC,EAAAC,cAAA,+GAIAF,EAAAC,EAAAC,cAAA,gOAMAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,2GAIAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,OAAKE,IAAKY,IAAOV,IAAI,UACrBN,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,OAAKE,IAAKa,IAAqBX,IAAI,0BACnCN,EAAAC,EAAAC,cAAA,kGAIAF,EAAAC,EAAAC,cAAA,kEACAF,EAAAC,EAAAC,cAAA,gOAMAF,EAAAC,EAAAC,cAAA,2DACAF,EAAAC,EAAAC,cAAA,mFAGAF,EAAAC,EAAAC,cAAA,sEACAF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,8FAIAF,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,yDAEFF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,4DA7I+BQ,IAAMC,YCPxBO,mLAEjB,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iCAJiCQ,IAAMC,WCA1BQ,mLAEjB,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qCAJmCQ,IAAMC,WCI5BS,mLAEjB,MAA4B,cAAxBrB,KAAKU,MAAMY,SACNrB,EAAAC,EAAAC,cAACoB,EAAD,MAC0B,gBAAxBvB,KAAKU,MAAMY,SACbrB,EAAAC,EAAAC,cAACqB,EAAD,MAC0B,oBAAxBxB,KAAKU,MAAMY,SACbrB,EAAAC,EAAAC,cAACsB,EAAD,WADF,SANuBd,IAAMC,WCElCc,cACJ,SAAAA,EAAYhB,GAAO,IAAAX,EAAA,OAAA4B,OAAAC,EAAA,EAAAD,CAAA3B,KAAA0B,IACjB3B,EAAA4B,OAAAE,EAAA,EAAAF,CAAA3B,KAAA2B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA/B,KAAMU,KACDsB,YAAcjC,EAAKiC,YAAYC,KAAjBN,OAAAO,EAAA,EAAAP,CAAA5B,IACnBA,EAAKoC,MAAQ,CACXb,SAAU,aAJKvB,2EAQPqC,GACVpC,KAAKqC,SAAS,CACZf,SAAUc,qCAKZ,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UACTH,EAAAC,EAAAC,cAACmC,EAAD,CAAQ7B,QAAST,KAAKgC,cACtB/B,EAAAC,EAAAC,cAACoC,EAAD,CAAMjB,SAAUtB,KAAKmC,MAAMb,mBAnBfX,IAAMC,WAyB1B4B,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAAWC,SAASC,eAAe,SNiG7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.84a7f8b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9c78e7bd.png\";","module.exports = __webpack_public_path__ + \"static/media/kids_ipad.8fd0ec5d.png\";","module.exports = __webpack_public_path__ + \"static/media/message_swipe.a9ea4937.png\";","module.exports = __webpack_public_path__ + \"static/media/add_engagement.ef8d9cd0.png\";","module.exports = __webpack_public_path__ + \"static/media/silos.24309731.png\";","module.exports = __webpack_public_path__ + \"static/media/oversignal_over_silos.24628c6f.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Header.css\";\nimport logo from \"./img/logo.png\";\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <div class=\"nav-menu\">\n        <img src={logo} alt=\"Logo\" class=\"logo\" />\n        <div class=\"inner-menu\">\n          <Button onClick={() => this.props.onClick(\"Investors\")}>\n            Investors\n          </Button>\n          <Button onClick={() => this.props.onClick(\"Advertisers\")}>\n            Advertisers\n          </Button>\n          <Button onClick={() => this.props.onClick(\"Front End Users\")}>\n            Front End Users\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport KidsIpad from \"./img/kids_ipad.png\";\nimport MessageSwipe from \"./img/message_swipe.png\";\nimport AddEngagement from \"./img/add_engagement.png\";\nimport Silos from \"./img/silos.png\";\nimport OverSignalOverSilos from \"./img/oversignal_over_silos.png\";\nimport \"./Investor.css\";\n\nexport default class Investors extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Investors</h1>\n        <h2>\n          Over half of the world’s population cannot afford to use the mobile\n          Internet.\n        </h2>\n        <p>\n          The developing world has over 98% mobile phone penetration, yet use\n          smart phones as dumb phones.\n        </p>\n        <img src={KidsIpad} alt=\"Kids Ipad\" />\n        <h2>Mobile internet connectivity means:</h2>\n        <ul>\n          <li>Access to an endless stream of knowledge.</li>\n          <li>Global communication and news.</li>\n          <li>Address, mapping, and contact information.</li>\n          <li>Banking, bill paying, and shopping.</li>\n          <li>Selling and making money.</li>\n          <li>Collaboration and access to a global workforce.</li>\n          <li>Donations and funding.</li>\n          <li>Entertainment.</li>\n          <li>Internet of things, cloud storage, and cloud computing,</li>\n          <li>Hope for the future.</li>\n        </ul>\n        <p>\n          Oversignal has created a patent pending way to connect the world to\n          FREE mobile internet through advertising.\n        </p>\n        <p>\n          This is the largest consumer base, and fastest growing market in the\n          world.\n        </p>\n        <h2>\n          *Over 40 million people have already provided proof to our concept.\n        </h2>\n        <p>\n          *Jana Mobile, through a restrictive proprietary browser, connects 40\n          million people to the mobile internet.\n        </p>\n        <p>\n          “Jana is the largest provider of free internet in emerging markets.\n          Through Jana’s mCent Browser, the next billion smartphone users are\n          coming online without incurring data charges. Jana makes all mobile\n          content freely accessible and discoverable through technology\n          integrated into the billing systems of 311 mobile operators and\n          available to 4.56 billion mobile subscribers. Today, Jana has provided\n          over 40 million emerging market users with free, ad-sponsored internet\n          access.”\n        </p>\n        <p>$93m </p>\n        <p>Raised in 6 rounds from 3 main investors.</p>\n        <h2>\n          Oversignal provides free mobile minutes whenever a user engages with\n          an ad or downloads a mobile app by using the keyboard.\n        </h2>\n        <ul>\n          <li>No restrictions.</li>\n          <li>No proprietary browser.</li>\n          <li>No intrusion on user experience.</li>\n        </ul>\n        <h2>A better way:</h2>\n        <div class=\"two-panel-display\">\n          <p>\n            Users simply swipe their screen whenever the keyboard is present.\n            This brings up a new screen filled with ad choices and app\n            downloads.\n          </p>\n          <img src={MessageSwipe} alt=\"Message Swipe\" />\n        </div>\n        <div class=\"two-panel-display\">\n          <p>\n            Swiping brings up a new screen, allowing users to select app\n            downloads and ads to engage with, earning free mobile minutes.\n          </p>\n          <img src={AddEngagement} alt=\"Message Swipe\" />\n        </div>\n        <h2>\n          Ads on the Oversignal platform are voluntary and are not subject to\n          accidental clicks that affect 50% of mobile ads. The ads are highly\n          targeted and therefore much more valuable to advertisers.\n        </h2>\n        <p>\n          The global Internet Advertising market is valued at 195300 million USD\n          in 2018 and is expected to reach 361900 million USD by the end of\n          2024, growing at a CAGR of 10.8% between 2019 and 2024. The\n          Asia-Pacific will occupy for more market share in following years,\n          especially in China, also fast growing India and Southeast Asia\n          regions.\n        </p>\n        <h2>\n          By accessing ads and app downloads via the keyboard, a massive amount\n          of clean data is available.\n        </h2>\n        <p>\n          This creates extremely accurate and relevant ad targeting and\n          eliminates the need for most data aggregation. Ad networks, such as\n          inMobi, will make ideal partners due to emerging market expertise and\n          saturation.\n        </p>\n        <h2>BIGGER BETTER DATA</h2>\n        <p>\n          Current data acquisition requires aggregation from Social Networks,\n          Search, and other sources.\n        </p>\n        <h2>Currently, user generated data is locked down in silos.</h2>\n        <img src={Silos} alt=\"Silos\" />\n        <h2>Oversignal acquires data BEFORE it is locked in silos</h2>\n        <img src={OverSignalOverSilos} alt=\"Oversignal Over Silos\" />\n        <h2>\n          No other platform allows advertisers to access data before it is\n          siloed within apps.\n        </h2>\n        <h2>Oversignal has US and International patents pending.</h2>\n        <p>\n          Our first US Patent filing has received approval on every claim. IP\n          includes all usage of the keyboard as a mechanism for advertising.\n          Swiping of the keyboard to bring up a new window with ads and app\n          downloads.\n        </p>\n        <h2>Our first market is over 4.56 billion people.</h2>\n        <p>\n          Advertising in emerging markets will be a $300 billion market in 2020.\n        </p>\n        <h2>85% of the WORLD are on restrictive pay-as-you-go plans.</h2>\n        <h3>OUR NEXT MARKET IS THE REST OF THE WORLD.</h3>\n        <h4>US Ad Market $111 Billion</h4>\n        <p>Ads that people seek out:</p>\n        <h4>Groupon</h4>\n        <ul>\n          <li>47 million unique purchases last year.</li>\n          <li>\n            More than 50% were happy to receive certain types of messages that\n            are relevant.\n          </li>\n          <li>52% would take advantage of an immediate discount.</li>\n          <li>46% want to receive a gift from companies.</li>\n        </ul>\n        <h4>Amazon</h4>\n        <p>Highly relevant ads based off user data</p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nexport default class Advertisers extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Advertisers</h1>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nexport default class FrontEndUsers extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Front End Users</h1>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Investors from \"./Investors\";\nimport Advertisers from \"./Advertisers\";\nimport FrontEndUsers from \"./FrontEndUsers\";\n\nexport default class Body extends React.Component {\n  render() {\n    if (this.props.pageName === \"Investors\") {\n      return <Investors />;\n    } else if (this.props.pageName === \"Advertisers\") {\n      return <Advertisers />;\n    } else if (this.props.pageName === \"Front End Users\") {\n      return <FrontEndUsers />;\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Header from \"./Header\";\nimport Body from \"./Body\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      pageName: \"Investors\"\n    };\n  }\n\n  handleClick(newPage) {\n    this.setState({\n      pageName: newPage\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"parent\">\n        <Header onClick={this.handleClick} />\n        <Body pageName={this.state.pageName} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}